/*
 * ChatLogFrm.java
 *
 * Created on __DATE__, __TIME__
 */

package com.tanglover.communication.client;

import com.tanglover.communication.datadeal.ChatLogMessage;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import java.net.URL;
import java.util.Map;

/**
 * @author __USER__
 */
public class ChatLogFrm extends javax.swing.JFrame {


    /**
     *
     */
    private static final long serialVersionUID = 1L;
    private String friendName;

    public String getFriendName() {
        return friendName;
    }

    public void setFriendName(String friendName) {
        this.friendName = friendName;
    }

    /**
     * Creates new form ChatLogFrm
     */
    public ChatLogFrm(String friendName) {

        this.friendName = friendName;

        initComponents();
        URL url = this.getClass().getResource("/about2.jpg");
        ImageIcon img = new ImageIcon(url);//这是背景图片
        JLabel imgLabel = new JLabel(img);//将背景图放在标签里。

        Container cp = this.getContentPane();
        cp.add(imgLabel);
        this.getLayeredPane().add(imgLabel, new Integer(Integer.MIN_VALUE));//注意这里是关键，将背景标签添加到jfram的LayeredPane面板里。
        imgLabel.setBounds(0, 0, img.getIconWidth(), img.getIconHeight());//设置背景标签的位置
        // this.setSize(800, 500);
        this.setVisible(true);

        setLocation(((int) Toolkit.getDefaultToolkit().getScreenSize().getWidth() - 850), 300);

        ((JPanel) getContentPane()).setOpaque(false); //注意这里，将内容面板设为透明。这样LayeredPane面板中的背景才能显示出来。

        this.setResizable(false);

        Toolkit tool = getToolkit(); //得到一个Toolkit对象
        URL url1 = this.getClass().getResource("/logoo.jpg");
        Image myimage = tool.getImage(url1); //由tool获取图像
        setIconImage(myimage);

        jTextArea1.setEditable(false);
        jTextArea1.setLineWrap(true);

        jButton2.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                exit();

            }
        });
        //导出文件
        jButton3.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                export();

            }
        });

        jButton1.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                jTextArea1.setText("");
                clearChat();

            }
        });
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    //GEN-BEGIN:initComponents
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("\u804a\u5929\u8bb0\u5f55");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);

        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("\u6e05\u9664");

        jButton2.setText("\u5173\u95ed");

        jButton3.setText("\u5bfc\u51fa\u6587\u4ef6");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
                getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(
                javax.swing.GroupLayout.Alignment.LEADING).addGroup(
                javax.swing.GroupLayout.Alignment.TRAILING,
                layout.createSequentialGroup().addGap(21, 21, 21).addComponent(
                        jButton3).addPreferredGap(
                        javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                        128, Short.MAX_VALUE).addComponent(jButton1).addGap(29,
                        29, 29).addComponent(jButton2).addGap(24, 24, 24))
                .addComponent(jScrollPane1,
                        javax.swing.GroupLayout.DEFAULT_SIZE, 397,
                        Short.MAX_VALUE));
        layout
                .setVerticalGroup(layout
                        .createParallelGroup(
                                javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(
                                layout
                                        .createSequentialGroup()
                                        .addComponent(
                                                jScrollPane1,
                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                261,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(
                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(
                                                layout
                                                        .createParallelGroup(
                                                                javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jButton1)
                                                        .addComponent(jButton2)
                                                        .addComponent(jButton3))
                                        .addContainerGap()));

        pack();

    }// </editor-fold>
    //GEN-END:initComponents

    public void exit() {
        this.dispose();
    }


    //把聊天记录从本地文件读出来并导出
    public void export() {
        String str = null;
        BufferedWriter bw = null;
        ObjectInputStream ois = null;
        File file = null;
        file = new File("src\\" + ClieneMainFrame.loginName + ".txt");
        try {
            ois = new ObjectInputStream(new FileInputStream(file));
            ChatLogMessage chatLogMessage = (ChatLogMessage) ois.readObject();
            Map<String, String> map = chatLogMessage.getMap();
            if (map.containsKey(friendName)) {
                str = map.get(friendName);
                bw = new BufferedWriter(new FileWriter(new File("d:\\" + friendName + ".txt")));
                bw.write(str);
                new Export(friendName);
                ois.close();
                bw.close();
            } else {
                JOptionPane.showMessageDialog(null, "你与" + friendName + "还没有任何聊天记录！");
            }

        } catch (FileNotFoundException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (ClassNotFoundException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }

    //清空聊天记录
    public void clearChat() {
        ClieneMainFrame.mapChatLog.put(friendName, "");
        ClieneMainFrame.chatLogs();
    }


    /**
     * @param args the command line arguments
     */
//	public static void main(String args[]) {
//		java.awt.EventQueue.invokeLater(new Runnable() {
//			public void run() {
//				new ChatLogFrm().setVisible(true);
//			}
//		});
//	}

    //GEN-BEGIN:variables
    // Variables declaration - do not modify
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    @SuppressWarnings("unused")
    private JDialog jDialog;
    // End of variables declaration//GEN-END:variables

    public javax.swing.JTextArea getjTextArea1() {
        return jTextArea1;
    }

    public void setjTextArea1(javax.swing.JTextArea jTextArea1) {
        this.jTextArea1 = jTextArea1;
    }

}